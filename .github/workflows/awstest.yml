name: nf-core AWS test
# This workflow is triggered on push to the master branch.
# It runs the -profile 'test' on AWS batch

on:
  push:
    branches:
        - master
        - dev # just for testing purposes, to be removed

jobs:
  run-awstest:
    if: github.repository == 'nf-core/hlatyping'
    name: Run AWS test
    runs-on: ubuntu-latest
    steps:
      - name: Setup Miniconda
        uses: goanpeca/setup-miniconda@v1.0.2
        with:
          auto-update-conda: true
          python-version: 3.7
      - name: Install awscli
        run: conda install -c conda-forge awscli
      - name: Start AWS batch job
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.AWSTEST_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWSTEST_KEY_SECRET}}
          TOWER_ACCESS_TOKEN: ${{secrets.AWSTEST_TOWER_TOKEN}}
          AWS_JOB_DEFINITION: ${{secrets.AWS_JOB_DEFINITION}}
          AWS_JOB_QUEUE: ${{secrets.AWS_JOB_QUEUE}}
          AWS_S3_BUCKET: ${{secrets.AWS_S3_BUCKET}}
        run: | # Submits job to AWS batch using a 'nextflow-4GiB' job definition. Setting JVM options to "-XX:+UseG1GC" for more efficient garbage collection when staging remote files.
          aws batch submit-job \
          --region eu-west-1 \
          --job-name nf-core-hlatyping \
          --job-queue $AWS_JOB_QUEUE \
          --job-definition $AWS_JOB_DEFINITION \
          --container-overrides '{"command": ["nf-core/hlatyping", "-r '"${GITHUB_SHA}"' -profile test --outdir s3://nf-core-awsmegatests/hlatyping/results-'"${GITHUB_SHA}"' -w s3://nf-core-awsmegatests/hlatyping/work-'"${GITHUB_SHA}"' -with-tower"], "environment": [{"name": "TOWER_ACCESS_TOKEN", "value": "'"$TOWER_ACCESS_TOKEN"'"}]}'
